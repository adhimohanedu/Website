install.packages("shiny")
install.packages("learnr")
library(tidyverse)
library(maps)
library(ggrepel)
library(dplyr)
library(plotly)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Get US map data with state names
us_map <- map_data("state")
data <- data %>%
rename(region = state)
data <- data %>%
mutate(region = tolower(region))
# Merge data with us_map by region
map_data <- left_join(us_map, data, by = "region")
map_data$uninsured_rates <- gsub("%", "", map_data$uninsured_rates)
map_data$uninsured_rates <- as.numeric(map_data$uninsured_rates)
# Aggregate data by state
symbols_data <- map_data %>%
group_by(region) %>%
summarize(long = mean(long), lat = mean(lat),
symbols = first(symbols), uninsured_rates = first(uninsured_rates))
# Plot the US map with state symbols and uninsured rates
ggplot() +
geom_polygon(data = us_map, aes(x = long, y = lat, group = group),
color = "#1AFF1A", fill = "#F7EFB4") +  # Add state polygons
geom_text(data = symbols_data, aes(x = long, y = lat, label = paste(symbols, "\n", uninsured_rates,"%")),
size = 3, color = "black", fontface = "bold", hjust = 0.5) +
labs(title = "Uninsured Rates Percentage by State in the US")+# Add state symbols and uninsured rates as labels
coord_map() +                                  # Use a map projection
theme_void()                                   # Remove axis and background
library(tidyverse)
library(maps)
library(ggrepel)
library(dplyr)
library(plotly)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Get US map data with state names
us_map <- map_data("state")
data <- data %>%
rename(region = state)
data <- data %>%
mutate(region = tolower(region))
# Merge data with us_map by region
map_data <- left_join(us_map, data, by = "region")
map_data$uninsured_rates <- gsub("%", "", map_data$uninsured_rates)
map_data$uninsured_rates <- as.numeric(map_data$uninsured_rates)
# Aggregate data by state
symbols_data <- map_data %>%
group_by(region) %>%
summarize(long = mean(long), lat = mean(lat),
symbols = first(symbols), uninsured_rates = first(uninsured_rates))
# Plot the US map with state symbols and uninsured rates
ggplot() +
geom_polygon(data = us_map, aes(x = long, y = lat, group = group),
color = "#1AFF1A", fill = "#F7EFB4") +  # Add state polygons
geom_text(data = symbols_data, aes(x = long, y = lat, label = paste(symbols, "\n", uninsured_rates,"%")),
size = 3, color = "black", fontface = "bold", hjust = 0.5) +
labs(title = "Uninsured Rates Percentage by State in the US")+# Add state symbols and uninsured rates as labels
coord_map() +                                  # Use a map projection
theme_void()                                   # Remove axis and background
library(tidyverse)
library(maps)
library(ggrepel)
library(dplyr)
library(plotly)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Get US map data with state names
us_map <- map_data("state")
data <- data %>%
rename(region = state)
data <- data %>%
mutate(region = tolower(region))
# Merge data with us_map by region
map_data <- left_join(us_map, data, by = "region")
map_data$uninsured_rates <- gsub("%", "", map_data$uninsured_rates)
map_data$uninsured_rates <- as.numeric(map_data$uninsured_rates)
# Order symbols according to state column
map_data <- map_data %>%
arrange(region)
# Create ggplot2 plot
gg <- ggplot(data = map_data, aes(x = long, y = lat, group = group,
fill = as.numeric(uninsured_rates), text =
paste("State: ", region, "<br>Uninsured Rate: ", uninsured_rates,
"%<br>Symbols: ", symbols))) +
geom_polygon(color = "#FFFFFF") +
geom_text_repel(data = map_data %>% distinct(region, .keep_all = TRUE),
aes(label = symbols), size = 3, color = "#121D12",
box.padding = unit(0.35, "lines"), # Adjust padding
point.padding = unit(0.5, "lines"), # Adjust padding
segment.color = "#FFFFFF") + # Add segment color
scale_fill_gradient(name = "Uninsured Rate (%)", na.value = "#55C555",
low = "#1AFF1A", high = "#DC3220", guide = "legend") +
labs(title = "Uninsured Rates Percentage by State in the US",
subtitle = "Darker colors represent higher uninsured rates") +
theme_minimal() +
theme(legend.position = "right")
# Convert ggplot2 plot to plotly
ggplotly(gg, tooltip = "text")
library(tidyverse)
library(maps)
library(ggrepel)
library(dplyr)
library(plotly)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Convert uninsured_rates to numeric
data$uninsured_rates <- as.numeric(gsub("%", "", data$uninsured_rates))
# Get US map data with state names
us_map <- map_data("state")
data <- data %>%
rename(region = state)
data <- data %>%
mutate(region = tolower(region))
# Reorder levels of region based on uninsured_rates
data$region <- factor(data$region, levels = data$region[order(-data$uninsured_rates)])
# Create the plot
p <- ggplot(data, aes(x = uninsured_rates, y = region)) +
geom_col(fill = "#FEFE62", color = "#E66100") +  # Use geom_col instead of geom_bar
geom_text(aes(label = paste0(uninsured_rates, "%")), hjust = 1, nudge_x = -0.5,
size = 3, color = "#1A85FF") +  # Add % symbol to label
labs(title = "Health Insurance Coverage in the US:",
subtitle = "Percentage of Population Without Health Insurance",
x = "Percentage of Uninsured Population",
y = "Name of the States")
p
library(ggplot2)
library(scales) # for comma formatting
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Remove commas and convert state_population to numeric
data$state_population <- as.numeric(gsub(",", "", data$state_population))
# Order data by uninsured rates for stacked bar chart
data <- data[order(data$uninsured_rates), ]
# Create stacked bar chart
ggplot(data, aes(x = state, y = state_population, fill = uninsured_rates)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = "green", high = "red") +
scale_y_continuous(labels = comma) + # Format y-axis labels with commas
labs(title = "Uninsured Rates vs. State Population",
x = "State",
y = "Population of the state",
fill = "Uninsured Rates") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) +
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Sum") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
# Create a data frame with the given data
state_data <- data.frame(
State = c("Texas", "Oklahoma", "Georgia", "Florida", "Mississippi", "Wyoming", "Alaska", "Nevada", "Arizona", "North Carolina"),
Uninsured_Percentage = c(18.4, 14.3, 13.4, 13.2, 13, 12.3, 12.2, 11.4, 11.3, 11.3)
)
# Sort the data frame by Uninsured_Percentage
state_data <- state_data[order(state_data$Uninsured_Percentage, decreasing = TRUE), ]
# Create the bar plot
barplot(state_data$Uninsured_Percentage, names.arg = state_data$State,
col = "#1A85FF", ylim = c(0, 20),
xlab = "", ylab = "Population Without Health Insurance (%)",
main = "Top 10 States With the Highest Percentage of Uninsured Americans",
cex.names = 0.8, las = 2, border = NA)
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) + scale_y_continuous(labels = scales::comma) +
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Total US Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) + scale_y_continuous(labels = scales::comma)
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Total US Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) + scale_y_continuous(labels = scales::comma) +
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Total US Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Arrange the order of categories
hist_data$Population <- factor(hist_data$Population, levels = c("State Population", "Uninsured Population"))
# Plot histogram with y-axis limits
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) +
scale_y_continuous(labels = scales::comma, limits = c(0, 5000000)) +  # Set y-axis limits
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Total US Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) + scale_y_continuous(labels = scales::comma)
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Total US Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) + scale_y_continuous(labels = scales::comma)
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Total US Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Arrange the order of categories
hist_data$Population <- factor(hist_data$Population, levels = c("State Population", "Uninsured Population"))
# Plot histogram with y-axis limits
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) +
scale_y_continuous(labels = scales::comma, limits = c(0, 5000000)) +  # Set y-axis limits
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Total US Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("State Population", "Uninsured Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) + scale_y_continuous(labels = scales::comma) +
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Total US Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("Uninsured Population", "State Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) + scale_y_continuous(labels = scales::comma) +
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
library(ggplot2)
# Define the data
data <- read.csv("/Users/adhimohan/Desktop/STAT/Stat dataset pro.csv", fileEncoding = "ISO-8859-1")
# Provided data
state_population <- data$state_population
uninsured_population <- data$uninsured_population
# Convert commas to empty string and then to numeric
state_population <- as.numeric(gsub(",", "", state_population))
uninsured_population <- as.numeric(gsub(",", "", uninsured_population))
# Calculate the sum of state_population and uninsured_population
sum_state_population <- sum(state_population)
sum_uninsured_population <- sum(uninsured_population)
# Create a data frame for histogram
hist_data <- data.frame(Population = c("Uninsured Population", "Total US Population"),
Sum = c(sum_state_population, sum_uninsured_population))
# Plot histogram
ggplot(hist_data, aes(x = Population, y = Sum, fill = Population)) +
geom_bar(stat = "identity", width = 0.5) + scale_y_continuous(labels = scales::comma) +
labs(title = "Summation of State Population vs Uninsured Population",
x = "Population Type",
y = "Population") +
scale_fill_manual(values = c("#1AFF1A", "#4B0092")) +
theme_minimal()
# Create a data frame with the given data
state_data <- data.frame(
State = c("Texas", "Oklahoma", "Georgia", "Florida", "Mississippi", "Wyoming", "Alaska", "Nevada", "Arizona", "North Carolina"),
Uninsured_Percentage = c(18.4, 14.3, 13.4, 13.2, 13, 12.3, 12.2, 11.4, 11.3, 11.3)
)
# Sort the data frame by Uninsured_Percentage
state_data <- state_data[order(state_data$Uninsured_Percentage, decreasing = TRUE), ]
# Create the bar plot
barplot(state_data$Uninsured_Percentage, names.arg = state_data$State,
col = "#1A85FF", ylim = c(0, 20),
xlab = "", ylab = "Population Without Health Insurance (%)",
main = "Top 10 States With the Highest Percentage of Uninsured Americans",
cex.names = 0.8, las = 2, border = NA)
